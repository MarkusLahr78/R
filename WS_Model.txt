
R version 3.5.3 (2019-03-11) -- "Great Truth"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

R ist ein Gemeinschaftsprojekt mit vielen Beitragenden.
Tippen Sie 'contributors()' für mehr Information und 'citation()',
um zu erfahren, wie R oder R packages in Publikationen zitiert werden können.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

> # WS model
> 
> f = function(j, mat){
+  return(c(mat[1:j, j], mat[j,(j+1):length(mat[1,])]))
+ }
> 
> g = function(j, mat){
+  k = length(mat[1,])
+  a = matrix(0, nrow = 2, ncol = k)
+  if(j>1){
+  for(i in 1:(j-1)){
+  a[1,i] = i
+  a[2,i] = j
+  }
+  }
+  if(j<k){
+  for(i in (j+1):k){
+  a[1,i] = j
+  a[2,i] = i
+  }
+  }
+  a = a[,-j]
+  return(a)
+ }
> g(1, map)
Fehler in g(1, map) : Objekt 'map' nicht gefunden
> callDiag = function(j, mat){
+  return(c(diag(mat[g(j,mat)[1, 1:(length(mat[1,])-1)], g(j,mat)[2, 1:(length(mat[1,])-1)]])))
+ }
> 
> which(callDiag(4,matrix(runif(20*20),20,20)) <0.1)
[1] 10 18
> 
> generateWS = function(n = 100, k = 4 , p = 0.5){
+  map = matrix(0,n,n)
+  down = floor(k/2)
+  up = ceiling(k/2)
+  for(j in 1:n){
+  map[(((j-down):(j+up))%%n)[-(down + 1)],j] = 1 
+  }
+  map = map|t(map)*1
+  
+  for(j in 2:n){
+  list1 = which(map[(((j-down):(j))%%n),j]==1)
+  listBusy = which(map[(((j-down):(j))%%n),j]==1)
+  for(i in 1:(j-1)){
+  if((j-i<=floor(k/2))|(j-i>= n-1-up)){
+  if(rbinom(1,1,p)){
+  map[i,j] = 0
+  samp = sample(which(callDiag(j, map) == 0), 1)
+  map[g(j, map)[1, samp], g(j, map)[2, samp]] = 1
+  }
+  }
+  }
+  }
+  
+  return(map*1)
+ }
> image(generateWS(500))
> 
